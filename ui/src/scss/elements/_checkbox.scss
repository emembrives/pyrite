// Source: https://css-tricks.com/custom-styling-form-inputs-with-modern-css-features/
@supports (-webkit-appearance: none) or (-moz-appearance: none) {

    input[type="checkbox"],
    input[type="radio"] {
        --active: var(--primary-color);
        --active-inner: #fff;
        --focus: 2px hsl(var(--primary-color-h) var(--primary-color-s) 75%);
        --border: var(--grey-6);
        --border-hover: var(--primary-color);
        --background: #fff;
        --disabled: #f6f8ff;
        --disabled-inner: #e1e6f9;

        appearance: none;
        background: var(--b, var(--background));
        border: 1px solid var(--bc, var(--border));
        cursor: pointer;
        display: inline-block;
        height: 21px;
        margin: 0;
        margin-right: var(--spacer);
        outline: unset;
        position: relative;
        transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
        vertical-align: top;

        &::after {
            content: "";
            display: block;
            left: 0;
            position: absolute;
            top: 0;
            transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
        }

        &:checked {
            --b: var(--active);
            --bc: var(--active);
            --d-o: 0.3s;
            --d-t: 0.6s;
            --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
        }

        &:disabled {
            --b: var(--disabled);

            cursor: not-allowed;
            opacity: 0.9;

            &:checked {
                --b: var(--disabled-inner);
                --bc: var(--border);
            }

            & + label {
                cursor: not-allowed;
            }
        }

        &:hover {

            &:not(:checked) {

                &:not(:disabled) {
                    --bc: var(--border-hover);
                }
            }
        }

        &:focus {
            box-shadow: 0 0 0 var(--focus);
            outline: none;
        }

        &:not(.switch) {
            width: 21px;

            &::after {
                opacity: var(--o, 0);
            }

            &:checked {
                --o: 1;
            }
        }

        & + label {
            color: var(--grey-4);
            cursor: pointer;
            display: inline-block;
            font-size: 14px;
            line-height: 21px;
            margin-left: var(--spacer);
            user-select: none;
            vertical-align: top;
        }
    }

    input[type="checkbox"] {

        &:not(.switch) {
            border-radius: 7px;

            &::after {
                border: 2px solid var(--active-inner);
                border-left: 0;
                border-top: 0;
                height: 9px;
                left: 7px;
                top: 4px;
                transform: rotate(var(--r, 20deg));
                width: 5px;
            }

            &:checked {
                --r: 43deg;
            }
        }

        &.switch {
            border-radius: 11px;
            width: 38px;

            &::after {
                background: var(--ab, var(--border));
                border-radius: 50%;
                height: 15px;
                left: 2px;
                top: 2px;
                transform: translateX(var(--x, 0));
                width: 15px;
            }

            &:checked {
                --ab: var(--active-inner);
                --x: 17px;
            }

            &:disabled {

                &:not(:checked) {

                    &::after {
                        opacity: 0.6;
                    }
                }
            }
        }
    }

    input[type="radio"] {
        border-radius: 50%;

        &::after {
            background: var(--active-inner);
            border-radius: 50%;
            height: 19px;
            opacity: 0;
            transform: scale(var(--s, 0.7));
            width: 19px;
        }

        &:checked {
            --s: 0.5;
        }
    }
}
